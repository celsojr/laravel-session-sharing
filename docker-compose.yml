version: "3.8"

services:
  mysql:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    command: >
      bash -c "docker-entrypoint.sh mysqld & 
      sleep 10 &&
      mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel1;' &&
      mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel2;' &&
      mysql -uroot -proot -e 'GRANT ALL PRIVILEGES ON laravel1.* TO \"laravel\"@\"%\";' &&
      mysql -uroot -proot -e 'GRANT ALL PRIVILEGES ON laravel2.* TO \"laravel\"@\"%\";' &&
      mysql -uroot -proot -e 'FLUSH PRIVILEGES;' &&
      wait"
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis_session
    networks:
      - laravel

  app1:
    build: ./docker/php
    container_name: app1_container
    working_dir: /var/www
    volumes:
      - ./app1:/var/www
      - ./start.sh:/start.sh
      - ./php-fpm-app1.conf:/usr/local/etc/php-fpm.d/www.conf
    environment:
      - APP_NAME=app1
      - SESSION_DRIVER=redis
      - SESSION_DOMAIN=.test.local
      - APP_URL=https://app1.test.local
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel1
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    ports:
      - "9001:9001"
    depends_on:
      - mysql
    networks:
      - laravel

  app2:
    build: ./docker/php
    container_name: app2_container
    working_dir: /var/www
    volumes:
      - ./app2:/var/www
      - ./start.sh:/start.sh
      - ./php-fpm-app2.conf:/usr/local/etc/php-fpm.d/www.conf
    environment:
      - APP_NAME=app2
      - SESSION_DRIVER=redis
      - SESSION_DOMAIN=.test.local
      - APP_URL=https://app2.test.local
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel2
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    ports:
      - "9002:9002"
    depends_on:
      - mysql
    networks:
      - laravel

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app1
      - app2
    networks:
      - laravel

volumes:
  mysql_data:

networks:
  laravel:
    driver: bridge
